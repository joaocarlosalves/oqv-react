{"version":3,"sources":["components/Menu.js","components/SearchBar.js","assets/img/logo.png","components/Logo.js","components/Header.js","components/Container.js","components/Footer.js","var.js","components/MovieList.js","components/SerieList.js","components/CastList.js","components/ImageList.js","pages/Details.js","pages/Home.js","pages/About.js","pages/Search.js","index.js"],"names":["Menu","menu","id","url","name","map","itemMenu","href","SearchBar","useState","value","setValue","search","window","location","className","onKeyPress","event","key","enterPress","onChange","target","onClick","x","y","viewBox","d","alt","src","logo","Header","Container","props","classname","undefined","style","children","Footer","display","justifyContent","title","width","height","variables","api","imgUrlBase","imgOrigUrlBase","MovieList","useEffect","setMovieList","list","movieList","results","movie","original_title","vote_average","poster_path","release_date","split","SerieList","setSerieList","console","log","serieList","serie","first_air_date","CastList","setCastList","castList","length","cast","character","profile_path","ImageList","setImageList","imageList","image","file_path","path","alert","Details","useParams","what","getMovieDetails","getTvDetails","loading","setLoading","movieDetail","setMovieDetail","movieImages","setMovieImages","movieRecommendations","setMovieRecommendations","movieVideos","setMovieVideos","movieSimilars","setMovieSimilars","movieCast","setMovieCast","movieKeywords","setMovieKeywords","movieBG","setMovieBG","tvDetail","setTvDetail","tvImages","setTvImages","tvRecommendations","setTvRecommendations","tvVideos","setTvVideos","tvSimilars","setTvSimilars","tvCast","setTvCast","tvKeywords","setTvKeywords","tvBG","setTvBG","a","fetch","detailsList","imagesList","recommendationsList","videosList","similarsList","keywordsList","json","detailJSON","imagesJSON","recommendationsJSON","videosJSON","similarsJSON","castJSON","keywordsJSON","movieBannerBG","backgroundImage","backdrop_path","setTimeout","tvBannerBG","genres","genre","homepage","rel","overview","production_companies","company","spoken_languages","production_countries","video","site","frameBorder","backdrops","keywords","keyword","last_air_date","created_by","created","Home","getPopularMovieList","getNowPlayingMovieList","getTopRatedMovieList","getPopularTvList","getNowPlayingTvList","getTopRatedTvList","popularMovieList","setPopularMovieList","nowPlayingMovieList","setNowPlayingMovieList","topRatedMovieList","setTopRatedMovieList","popularTvList","setPopularTvList","nowPlayingTvList","setNowPlayingTvList","topRatedTvList","setTopRatedTvList","res","marginBottom","About","marginTop","Search","getSearch","searchResult","setSearchResult","result","float","ReactDOM","render","StrictMode","exact","document","getElementById"],"mappings":"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","file":"static/js/main.ecdf6e84.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Menu() {\r\n    const menu = [\r\n        { id: 1, url: \"/\", name: \"HOME\" },\r\n        { id: 2, url: \"/about\", name: \"SOBRE\" },\r\n    ];\r\n\r\n    return(\r\n        <nav>\r\n            <ul>\r\n                {menu && menu.map(itemMenu => (\r\n                    <li key={ itemMenu.id }>\r\n                        <a href={`${ itemMenu.url }`}>{ itemMenu.name }</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React, { useState } from 'react'; \r\n\r\nexport default function SearchBar() {\r\n    const [value, setValue] = useState({});\r\n\r\n    function enterPress(event) {\r\n        if(event.key === 'Enter'){\r\n            search();\r\n        }\r\n      }\r\n\r\n    function search(){\r\n        window.location.href=`/search/${value}`;\r\n    }\r\n    return(\r\n        <>\r\n            <div className='search-bar'>\r\n                <input name='search-bar' onKeyPress={ event => enterPress(event) } onChange={ event => setValue(event.target.value)} />\r\n\r\n                <button onClick={ () => search() }>\r\n                    <svg x='0px' y='0px' viewBox='0 0 512 512'>\r\n                        <path d='M141.367,116.518c-7.384-7.39-19.364-7.39-26.748,0c-27.416,27.416-40.891,65.608-36.975,104.79 c0.977,9.761,9.2,17.037,18.803,17.037c0.631,0,1.267-0.032,1.898-0.095c10.398-1.04,17.983-10.316,16.943-20.707 c-2.787-27.845,6.722-54.92,26.079-74.278C148.757,135.882,148.757,123.901,141.367,116.518z'/>\r\n                        <path d='M216.276,0C97.021,0,0,97.021,0,216.276s97.021,216.276,216.276,216.276s216.276-97.021,216.276-216.276 S335.53,0,216.276,0z M216.276,394.719c-98.396,0-178.443-80.047-178.443-178.443S117.88,37.833,216.276,37.833 c98.39,0,178.443,80.047,178.443,178.443S314.672,394.719,216.276,394.719z'/>\r\n                        <path d='M506.458,479.71L368.999,342.252c-7.39-7.39-19.358-7.39-26.748,0c-7.39,7.384-7.39,19.364,0,26.748L479.71,506.458 c3.695,3.695,8.531,5.542,13.374,5.542c4.843,0,9.679-1.847,13.374-5.542C513.847,499.074,513.847,487.094,506.458,479.71z'/>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logo.6a5acccf.png\";","import React from 'react';\r\nimport logo from './../assets/img/logo.png';\r\n\r\nexport default function Menu() {\r\n   return(\r\n      <a href='/'>\r\n         <img \r\n            alt='OQV?' \r\n            className='logo' \r\n            src={ logo } \r\n         />\r\n      </a>\r\n   )\r\n}","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Logo from \"./Logo\";\r\n\r\nexport default function Header(){\r\n    return(\r\n        <>\r\n            <header>\r\n                <Logo />\r\n\r\n                <div className='menu-container'>\r\n                    <SearchBar /> \r\n\r\n                    <Menu />\r\n                </div>\r\n            </header>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Container(props){\r\n    let className = props.classname;\r\n\r\n    if(className === undefined) className = '';\r\n    \r\n    return(\r\n        <>\r\n            <section style={ props.style } className={`central-container ${ className }`}>\r\n                { props.children }\r\n            </section>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport Container from './Container';\r\n\r\nexport default function Footer() {\r\n    const flexFooter = { \r\n        display: 'flex ',\r\n        justifyContent: 'space-between',\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <footer>\r\n                <Container style={ flexFooter }>\r\n                    <div>\r\n                        <a \r\n                            className='link-jca' \r\n                            href='http://joaocarlosalves.com'\r\n                            title='2020 © João Carlos Alves'\r\n                            alt='2020 © João Carlos Alves'\r\n                        >\r\n                            <svg className='logo-jca' viewBox='0 0 550 550'>\r\n                                <g>\r\n                                    <path d='M275,25.6C137.3,25.6,25.6,137.3,25.6,275S137.2,524.4,275,524.4c137.7,0,249.4-111.601,249.4-249.4\r\n                                        C524.4,137.3,412.7,25.6,275,25.6z M455.3,358.9c-0.1,0-0.1,0-0.2,0h-46c-1.5,0-2.899-0.9-3.399-2.4l-7-18.6h-39.5l-6.8,18.6\r\n                                        c-0.5,1.4-1.9,2.4-3.4,2.4h-46c-1.2,0-2.3-0.601-3-1.601c-0.6-0.899-0.8-2-0.5-3.1c-8.7,3.1-17.9,4.7-27.5,4.7\r\n                                        c-11.6,0-22.3-2.2-32.5-6.7c-10-4.5-18.9-10.601-26.2-18.2c-7.4-7.6-13.3-16.6-17.5-26.6c-4.1,8-9.3,15.199-15.6,21.5\r\n                                        c-7.8,7.899-17.1,14.1-27.7,18.6c-10.3,4.6-21.7,6.9-33.8,6.9c-3,0-6.1-0.2-9.3-0.601c-3.1-0.399-6.7-0.899-10.9-1.7\r\n                                        c-1-0.199-1.8-0.699-2.4-1.5c-0.5-0.8-0.7-1.8-0.6-2.8l7.9-39.8c0.4-1.9,2.1-3.3,4.2-2.9c2.4,0.4,4.3,0.7,5.8,0.9s2.9,0.2,4.1,0.2\r\n                                        c5.3,0,10.6-1.101,15.6-3.2c4.9-2.1,9.1-5,12.9-8.8c3.7-3.601,6.5-7.9,8.7-13c2.1-4.9,3.2-10.3,3.2-15.9V199c0-2,1.6-3.6,3.7-3.6\r\n                                        h40.2c2,0,3.7,1.6,3.7,3.6v26.4c2.4-3.3,4.9-6.4,7.7-9.3c7.3-7.5,16.1-13.6,26.2-18.1c10.3-4.6,20.9-6.8,32.5-6.8\r\n                                        c10.7,0,21,2,30.6,5.9c9.6,3.8,19.1,9.9,28,18c0.8,0.7,1.2,1.7,1.2,2.7s-0.5,2-1.2,2.7l-32.9,29c-1.3,1.1-3.199,1.2-4.6,0.2\r\n                                        c-12.5-9-24.4-9.6-33.3-5.2c-3.8,1.7-7.2,4.1-10,7.2c-2.9,3.2-5.2,6.7-6.7,10.6c-1.7,4.2-2.6,8.4-2.6,12.7s0.8,8.6,2.4,12.8\r\n                                        c1.6,4.101,3.8,7.7,6.6,10.601c2.7,3,6.1,5.399,10.1,7.3c3.9,1.8,7.9,2.6,12.5,2.6c10.4,0,19.7-5.2,27.5-15.6\r\n                                        c0.6-0.8,1.5-1.3,2.5-1.4c1,0,2,0.2,2.7,0.8L318,303.2l38.5-105.4c0.5-1.4,1.9-2.4,3.4-2.4H397.8c1.5,0,2.9,1,3.4,2.4l57,155.2\r\n                                        c0.5,0.6,0.8,1.4,0.8,2.2C458.9,357.3,457.3,358.9,455.3,358.9z'></path>\r\n                                    <path d='M382.4,264.2c-0.5-1.5-1.9-2.5-3.5-2.5c-1.601,0-3,1-3.5,2.5l-10,30.3c-0.4,1.1-0.2,2.3,0.5,3.3\r\n                                        c0.699,1,1.8,1.5,3,1.5H388.8c1.2,0,2.3-0.6,3-1.5c0.7-0.899,0.9-2.2,0.5-3.3L382.4,264.2z'></path>\r\n                                </g>\r\n                            </svg>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className='footer-tmdb-credit'>\r\n                        <span>Using API by</span>\r\n                        <a href='https://www.themoviedb.org/'>\r\n                            <img \r\n                                src='https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg' \r\n                                alt='The Movie Database (TMDb)' \r\n                                width='154' \r\n                                height='20' \r\n                            />\r\n                        </a>\r\n                    </div>\r\n                </Container>\r\n            </footer>\r\n        </>\r\n    )\r\n}","const variables = {\r\n    key: '6396e5cd5a94bd0f0dadf2cf8b822d65',\r\n    api: 'https://api.themoviedb.org/3/',\r\n    imgUrlBase: 'http://image.tmdb.org/t/p/w600_and_h900_bestv2',\r\n    imgOrigUrlBase: 'http://image.tmdb.org/t/p/original'\r\n }\r\n \r\n export default variables;\r\n ","import React, { useEffect, useState } from 'react';\r\n\r\nimport variables from '../var';\r\n\r\nimport { BiCalendarAlt, BiCameraMovie } from 'react-icons/bi';\r\n\r\nexport default function MovieList(props) {\r\n    useEffect(() => {\r\n        setMovieList(props.list);\r\n    }, [props.list]);\r\n\r\n    const [ movieList, setMovieList ] = useState({});\r\n\r\n    return (\r\n        <>              \r\n            <h6 className='section-title'>{ props.title }</h6>\r\n            <div className='horizontal-scroll-container'>\r\n\r\n                { movieList.results && movieList.results.map(movie => (\r\n                    <a \r\n                        href={`/detail/movie/${ movie.id }`}\r\n                        key={ movie.id} className='movie-card'\r\n                        alt={ movie.original_title } \r\n                        title={ movie.original_title }\r\n                    >\r\n                        <div className='average'>{movie.vote_average}</div>\r\n\r\n                        { movie.poster_path && \r\n                            <img \r\n                                alt={ movie.original_title } \r\n                                src={`${ variables.imgUrlBase }${ movie.poster_path }`} />\r\n                        }\r\n\r\n                        { !movie.poster_path && \r\n                            <img \r\n                                alt={ movie.original_title } \r\n                                width='170' \r\n                                height='255' \r\n                                src='https://secure.i.telegraph.co.uk/multimedia/archive/01718/cinema1_1718651c.jpg' />\r\n                        }\r\n\r\n                        <div className='info-movie'>\r\n                            <span \r\n                                className='info-movie-title' \r\n                                alt={ movie.original_title } \r\n                                title={ movie.original_title }>\r\n                                <BiCameraMovie /> { movie.original_title }\r\n                            </span> \r\n                            \r\n                            <br />\r\n\r\n                            <span className='info-movie-data'>\r\n                                <BiCalendarAlt />\r\n                                { movie.release_date && `\r\n                                    ${ movie.release_date.split('-')[2] }/${ movie.release_date.split('-')[1] }/${ movie.release_date.split('-')[0] }\r\n                                `}\r\n                            </span>\r\n                        </div>\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport variables from '../var';\r\n\r\nimport { BiCalendarAlt, BiCameraMovie } from 'react-icons/bi';\r\n\r\nexport default function SerieList(props) {\r\n    useEffect(() => {\r\n        setSerieList(props.list);\r\n        console.log(props.list)\r\n    }, [props.list]);\r\n\r\n    const [ serieList, setSerieList ] = useState({});\r\n\r\n    return (\r\n        <>              \r\n            <h6 className='section-title'>{ props.title }</h6>\r\n            <div className='horizontal-scroll-container'>\r\n\r\n                { serieList.results && serieList.results.map(serie => (\r\n                    <a \r\n                        href={`/detail/serie/${ serie.id }`}\r\n                        key={ serie.id } className='movie-card'\r\n                        alt={ serie.name } \r\n                        title={ serie.name }\r\n                    >\r\n                        <div className='average'>{serie.vote_average}</div>\r\n\r\n                        { serie.poster_path && \r\n                            <img \r\n                                alt={ serie.name } \r\n                                src={`${ variables.imgUrlBase }${ serie.poster_path }`} />\r\n                        }\r\n\r\n                        { !serie.poster_path && \r\n                            <img \r\n                                alt={ serie.name } \r\n                                width='170' \r\n                                height='255' \r\n                                src='https://secure.i.telegraph.co.uk/multimedia/archive/01718/cinema1_1718651c.jpg' />\r\n                        }\r\n\r\n                        <div className='info-movie'>\r\n                            <span \r\n                                className='info-movie-title' \r\n                                alt={ serie.name } \r\n                                title={ serie.name }>\r\n                                <BiCameraMovie /> { serie.name }\r\n                            </span> \r\n                            \r\n                            <br />\r\n\r\n                            <span className='info-movie-data'>\r\n                                <BiCalendarAlt />\r\n                                { serie.first_air_date && `\r\n                                    ${ serie.first_air_date.split('-')[0] }\r\n                                `}\r\n                            </span>\r\n                        </div>\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport variables from '../var';\r\n\r\nexport default function CastList(props) {\r\n    useEffect(() => {\r\n        setCastList(props.list);\r\n    }, [props.list]);\r\n\r\n    const [ castList, setCastList ] = useState({});\r\n\r\n    return (\r\n        <>              \r\n            <h6 className='section-title'>{ props.title }</h6>\r\n            <div className='horizontal-scroll-container'>\r\n\r\n                { castList &&castList.length > 0 && castList.map(cast => (\r\n                    <a \r\n                        href='/'\r\n                        key={ cast.id } className='cast-card'\r\n                        alt={ cast.character } \r\n                        title={ cast.character }\r\n                    >\r\n                        { cast.profile_path && \r\n                            <img \r\n                                alt={ cast.character } \r\n                                src={`${ variables.imgUrlBase }${ cast.profile_path }`} />\r\n                        }\r\n\r\n                        { !cast.profile_path && \r\n                            <img \r\n                                alt={ cast.character } \r\n                                width='170' \r\n                                height='255' \r\n                                src='https://secure.i.telegraph.co.uk/multimedia/archive/01718/cinema1_1718651c.jpg' />\r\n                        }\r\n\r\n                        <div className='info-cast'>\r\n                            <span \r\n                                className='info-cast-title' \r\n                                alt={ cast.character } \r\n                                title={ cast.character }>\r\n                                \"{ cast.character }\"\r\n                            </span> \r\n                            \r\n                            <br />\r\n\r\n                            <span className='info-cast-data' \r\n                                alt={ cast.name } \r\n                                title={ cast.name }>\r\n                                { cast.name }\r\n                            </span>\r\n                        </div>\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport variables from '../var';\r\n\r\nexport default function ImageList(props) {\r\n    useEffect(() => {\r\n        setImageList(props.list);\r\n    }, [props.list]);\r\n\r\n    const [ imageList, setImageList ] = useState({});\r\n\r\n    const modalImage = (path) => {\r\n        alert(path)\r\n    }\r\n\r\n    return (\r\n        <>              \r\n            <h6 className='section-title'>{ props.title }</h6>\r\n            <div className='horizontal-images-scroll-container movie-image-list'>\r\n                { imageList && imageList.length > 0 && imageList.map(image => (\r\n                    <img \r\n                        key={ image.file_path } \r\n                        title='_' \r\n                        alt='_' \r\n                        src={`${ variables.imgOrigUrlBase }${ image.file_path }`}\r\n                        onClick={ () => modalImage(image.file_path) }\r\n                    />      \r\n                ))} \r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport variables from '../var';\r\n\r\nimport Container from '../components/Container';\r\nimport MovieList from '../components/MovieList';\r\nimport SerieList from '../components/SerieList';\r\nimport CastList from '../components/CastList';\r\nimport ImageList from '../components/ImageList';\r\n\r\nimport { BiWorld } from 'react-icons/bi';\r\nimport { SiGooglecalendar } from 'react-icons/si';\r\n\r\nexport default function Details() {\r\n    let { id, what } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (what === 'movie') getMovieDetails(id);\r\n        else if (what === 'tv' || what === 'serie') getTvDetails(id);\r\n        else window.location.href = '/';\r\n    });\r\n\r\n    //Loading\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Movie State\r\n    const [movieDetail, setMovieDetail] = useState({});\r\n    const [movieImages, setMovieImages] = useState({});\r\n    const [movieRecommendations, setMovieRecommendations] = useState({});\r\n    const [movieVideos, setMovieVideos] = useState({});\r\n    const [movieSimilars, setMovieSimilars] = useState({});\r\n    const [movieCast, setMovieCast] = useState({});\r\n    const [movieKeywords, setMovieKeywords] = useState({});\r\n    const [movieBG, setMovieBG] = useState({});\r\n\r\n\r\n    //TV State\r\n    const [tvDetail, setTvDetail] = useState({});\r\n    const [tvImages, setTvImages] = useState({});\r\n    const [tvRecommendations, setTvRecommendations] = useState({});\r\n    const [tvVideos, setTvVideos] = useState({});\r\n    const [tvSimilars, setTvSimilars] = useState({});\r\n    const [tvCast, setTvCast] = useState({});\r\n    const [tvKeywords, setTvKeywords] = useState({});\r\n    const [tvBG, setTvBG] = useState({});\r\n\r\n\r\n    //Get Movie Details\r\n    const getMovieDetails = async (id) => {\r\n        const detailsList = await fetch(`${variables.api}movie/${id}?api_key=${variables.key}&language=pt-BR`);\r\n        const imagesList = await fetch(`${variables.api}movie/${id}/images?api_key=${variables.key}`);\r\n        const recommendationsList = await fetch(`${variables.api}movie/${id}/recommendations?api_key=${variables.key}&language=pt-BR&page=1`);\r\n        const videosList = await fetch(`${variables.api}movie/${id}/videos?api_key=${variables.key}`);\r\n        const similarsList = await fetch(`${variables.api}movie/${id}/similar?api_key=${variables.key}&language=pt-BR&page=1`);\r\n        const castList = await fetch(`${variables.api}movie/${id}/credits?api_key=${variables.key}&language=pt-BR&page=1`);\r\n        const keywordsList = await fetch(`${variables.api}movie/${id}/keywords?api_key=${variables.key}&language=pt-BR&page=1`);\r\n\r\n        const detailJSON = await detailsList.json();\r\n        const imagesJSON = await imagesList.json();\r\n        const recommendationsJSON = await recommendationsList.json();\r\n        const videosJSON = await videosList.json();\r\n        const similarsJSON = await similarsList.json();\r\n        const castJSON = await castList.json();\r\n        const keywordsJSON = await keywordsList.json();\r\n\r\n        const movieBannerBG = { backgroundImage: `url('${variables.imgUrlBase}${movieDetail.backdrop_path}')` };\r\n\r\n        setMovieDetail(detailJSON);\r\n        setMovieImages(imagesJSON);\r\n        setMovieRecommendations(recommendationsJSON);\r\n        setMovieVideos(videosJSON);\r\n        setMovieSimilars(similarsJSON);\r\n        setMovieCast(castJSON);\r\n        setMovieKeywords(keywordsJSON);\r\n        setMovieBG(movieBannerBG);\r\n\r\n        setTimeout(() => setLoading(false), 2000);\r\n    }\r\n\r\n\r\n    //Get TV Show Details\r\n    const getTvDetails = async (id) => {\r\n        const detailsList = await fetch(`${variables.api}tv/${id}?api_key=${variables.key}&language=pt-BR`);\r\n        const imagesList = await fetch(`${variables.api}tv/${id}/images?api_key=${variables.key}`);\r\n        const recommendationsList = await fetch(`${variables.api}tv/${id}/recommendations?api_key=${variables.key}&language=pt-BR&page=1`);\r\n        const videosList = await fetch(`${variables.api}tv/${id}/videos?api_key=${variables.key}`);\r\n        const similarsList = await fetch(`${variables.api}tv/${id}/similar?api_key=${variables.key}&language=pt-BR&page=1`);\r\n        const castList = await fetch(`${variables.api}tv/${id}/credits?api_key=${variables.key}&language=pt-BR&page=1`);\r\n        const keywordsList = await fetch(`${variables.api}tv/${id}/keywords?api_key=${variables.key}`);\r\n\r\n        const detailJSON = await detailsList.json();\r\n        const imagesJSON = await imagesList.json();\r\n        const recommendationsJSON = await recommendationsList.json();\r\n        const videosJSON = await videosList.json();\r\n        const similarsJSON = await similarsList.json();\r\n        const castJSON = await castList.json();\r\n        const keywordsJSON = await keywordsList.json();\r\n\r\n        const tvBannerBG = { backgroundImage: `url('${variables.imgUrlBase}${tvDetail.backdrop_path}')` };\r\n\r\n        setTvDetail(detailJSON);\r\n        setTvImages(imagesJSON);\r\n        setTvRecommendations(recommendationsJSON);\r\n        setTvVideos(videosJSON);\r\n        setTvSimilars(similarsJSON);\r\n        setTvCast(castJSON);\r\n        setTvKeywords(keywordsJSON);\r\n        setTvBG(tvBannerBG);\r\n\r\n        setTimeout(() => setLoading(false), 2000);\r\n    }\r\n\r\n\r\n\r\n    //Renders\r\n    if (what === 'movie') {\r\n        return (\r\n            <>\r\n                { loading &&\r\n                    <div className='loading'>\r\n                        <span>CARREGANDO...</span>\r\n                    </div>\r\n                }\r\n                { !loading &&\r\n                    <>\r\n                        <div className='banner-container'>\r\n                            <div className='banner' style={movieBG}></div>\r\n\r\n                            <Container classname='container-style'>\r\n\r\n                                <div className='poster'>\r\n                                    <img alt='ws' src={`${variables.imgOrigUrlBase}${movieDetail.poster_path}`} />\r\n                                </div>\r\n\r\n                                <div className='row movie-banner-info'>\r\n                                    <h1 className='movie-title'>\r\n                                        {movieDetail.original_title} <span>({movieDetail.release_date && movieDetail.release_date.split('-')[0]})</span>\r\n                                    </h1>\r\n\r\n                                    <div className='row'>\r\n                                        <span className='release-date'>\r\n                                            <SiGooglecalendar />\r\n                                            {movieDetail.release_date && `\r\n                                        ${movieDetail.release_date.split('-')[2]}/${movieDetail.release_date.split('-')[1]}/${movieDetail.release_date.split('-')[0]}\r\n                                    `}\r\n                                        </span>\r\n\r\n                                        <ul className='movie-genre-list'>\r\n                                            {movieDetail.genres && movieDetail.genres.map(genre => (\r\n                                                <li key={genre.id}>• { genre.name}</li>\r\n                                            ))}\r\n                                        </ul>\r\n\r\n                                        {movieDetail.homepage &&\r\n                                            <a rel='noreferrer' className='website' target='_blank' href={movieDetail.homepage}><BiWorld />&nbsp;Site oficial</a>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className='row'>\r\n                                        <span className='sub-title'>Sinopse</span>\r\n                                        <p className='overview'>{movieDetail.overview}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Container>\r\n                        </div>\r\n\r\n                        <div className='fix-bottom-content'>\r\n\r\n                            <Container>\r\n                                <div className='row companies-left-margin'>\r\n                                    <div className='col'>\r\n                                        <span className='sub-title'>Produtoras</span>\r\n                                        <ul>\r\n                                            {movieDetail.production_companies && movieDetail.production_companies.length > 0 && movieDetail.production_companies.map(company => (\r\n                                                <li key={company.id}>\r\n                                                    { company.name}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                    <div className='col'>\r\n                                        <span className='sub-title'>Info</span>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <b>Idioma:</b> {movieDetail.spoken_languages && movieDetail.spoken_languages[0].name.length > 0 && movieDetail.spoken_languages[0].name}\r\n                                            </li>\r\n                                            <li>\r\n                                                <b>País:</b> {movieDetail.production_countries && movieDetail.production_countries[0].name.length > 0 && movieDetail.production_countries[0].name}\r\n                                            </li>\r\n                                            <li>\r\n                                                <b>Média de votos:</b> {movieDetail.vote_average}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </Container>\r\n\r\n\r\n                            {movieCast.cast && movieCast.cast.length > 0 ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Elenco</span>\r\n                                    <CastList list={movieCast.cast} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {movieVideos.results && movieVideos.results.length > 0 ? (\r\n                                <Container classname='full-yellow-container'>\r\n                                    <Container>\r\n                                        <span className='sub-title'>Vídeos e Trailers</span>\r\n                                        <div className='horizontal-videos-scroll-container'>\r\n                                            {movieVideos.results && movieVideos.results.map(video => {\r\n                                                if (video.site !== 'YouTube') return null;\r\n\r\n                                                return (\r\n                                                    <div className='video-card' key={video.id}>\r\n                                                        <iframe\r\n                                                            width='560'\r\n                                                            height='315'\r\n                                                            src={`https://www.youtube.com/embed/${video.key}`}\r\n                                                            frameBorder='0'\r\n                                                            title={video.name}\r\n                                                        ></iframe>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            )}\r\n                                        </div>\r\n                                    </Container>\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {movieImages.backdrops && movieImages.backdrops.length > 0 ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Imagens</span>\r\n                                    <ImageList list={movieImages.backdrops} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {movieKeywords.keywords && movieKeywords.keywords.length > 0 ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Keywords</span>\r\n                                    <ul className='genre-list'>\r\n                                        {movieKeywords.keywords && movieKeywords.keywords.length > 0 && movieKeywords.keywords.map(keyword => (\r\n                                            <li key={keyword.id}>\r\n                                                { keyword.name}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {movieRecommendations ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Filmes Recomendados</span>\r\n                                    <MovieList list={movieRecommendations} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {movieSimilars ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Filmes Similares</span>\r\n                                    <MovieList list={movieSimilars} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                { loading &&\r\n                    <div className='loading'>\r\n                        <span>CARREGANDO...</span>\r\n                    </div>\r\n                }\r\n                { !loading &&\r\n                    <>\r\n                        <div className='banner-container'>\r\n                            <div className='banner' style={tvBG}></div>\r\n\r\n                            <Container classname='container-style'>\r\n\r\n                                <div className='poster'>\r\n                                    <img alt='ws' src={`${variables.imgOrigUrlBase}${tvDetail.poster_path}`} />\r\n                                </div>\r\n\r\n                                <div className='row movie-banner-info'>\r\n                                    <h1 className='movie-title'>\r\n                                        {tvDetail.name} <span>({tvDetail.first_air_date && tvDetail.first_air_date.split('-')[0]} - {tvDetail.last_air_date && tvDetail.last_air_date.split('-')[0]})</span>\r\n                                    </h1>\r\n\r\n                                    <div className='row'>\r\n                                        <span className='release-date'>\r\n                                            <SiGooglecalendar />\r\n                                            {tvDetail.first_air_date && `\r\n                                        De: ${tvDetail.first_air_date.split('-')[2]}/${tvDetail.first_air_date.split('-')[1]}/${tvDetail.first_air_date.split('-')[0]}\r\n                                    `}\r\n\r\n                                            {tvDetail.last_air_date && `\r\n                                        - Até: ${tvDetail.last_air_date.split('-')[2]}/${tvDetail.last_air_date.split('-')[1]}/${tvDetail.last_air_date.split('-')[0]}\r\n                                    `}\r\n                                        </span>\r\n\r\n                                        <ul className='movie-genre-list'>\r\n                                            {tvDetail.genres && tvDetail.genres.map(genre => (\r\n                                                <li key={genre.id}>• { genre.name}</li>\r\n                                            ))}\r\n                                        </ul>\r\n\r\n                                        {tvDetail.homepage &&\r\n                                            <a rel='noreferrer' className='website' target='_blank' href={tvDetail.homepage}><BiWorld />&nbsp;Site oficial</a>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className='row'>\r\n                                        <span className='sub-title'>Sinopse</span>\r\n                                        <p className='overview'>{tvDetail.overview}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Container>\r\n                        </div>\r\n\r\n                        <div className='fix-bottom-content'>\r\n                            <Container>\r\n                                <div className='row companies-left-margin'>\r\n                                    <div className='col'>\r\n                                        <span className='sub-title'>Criado por</span>\r\n                                        <ul>\r\n                                            {tvDetail.created_by && tvDetail.created_by.length > 0 && tvDetail.created_by.map(created => (\r\n                                                <li key={created.id}>\r\n                                                    { created.name}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                    <div className='col'>\r\n                                        <span className='sub-title'>Produtoras</span>\r\n                                        <ul>\r\n                                            {tvDetail.production_companies && tvDetail.production_companies.length > 0 && tvDetail.production_companies.map(company => (\r\n                                                <li key={company.id}>\r\n                                                    { company.name}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                    <div className='col'>\r\n                                        <span className='sub-title'>Info</span>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <b>Idioma:</b> {tvDetail.spoken_languages && tvDetail.spoken_languages[0].name.length > 0 && tvDetail.spoken_languages[0].name}\r\n                                            </li>\r\n                                            <li>\r\n                                                <b>País:</b> {tvDetail.production_countries && tvDetail.production_countries[0].name.length > 0 && tvDetail.production_countries[0].name}\r\n                                            </li>\r\n                                            <li>\r\n                                                <b>Média de votos:</b> {tvDetail.vote_average}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </Container>\r\n\r\n\r\n                            {tvCast.cast && tvCast.cast.length > 0 ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Elenco</span>\r\n                                    <CastList list={tvCast.cast} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {tvVideos.results && tvVideos.results.length > 0 ? (\r\n                                <Container classname='full-yellow-container'>\r\n                                    <Container>\r\n                                        <span className='sub-title'>Vídeos e Trailers</span>\r\n                                        <div className='horizontal-videos-scroll-container'>\r\n                                            {tvVideos.results && tvVideos.results.map(video => {\r\n                                                if (video.site !== 'YouTube') return null;\r\n\r\n                                                return (\r\n                                                    <div className='video-card' key={video.id}>\r\n                                                        <iframe\r\n                                                            width='560'\r\n                                                            height='315'\r\n                                                            src={`https://www.youtube.com/embed/${video.key}`}\r\n                                                            frameBorder='0'\r\n                                                            title={video.name}\r\n                                                        ></iframe>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            )}\r\n                                        </div>\r\n                                    </Container>\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {tvImages.backdrops && tvImages.backdrops.length > 0 ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Imagens</span>\r\n                                    <ImageList list={tvImages.backdrops} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {tvKeywords.results && tvKeywords.results.length > 0 ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Keywords</span>\r\n                                    <ul className='genre-list'>\r\n                                        {tvKeywords.results && tvKeywords.results.length > 0 && tvKeywords.results.map(keyword => (\r\n                                            <li key={keyword.id}>\r\n                                                { keyword.name}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {tvRecommendations ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Séries Recomendados</span>\r\n                                    <SerieList list={tvRecommendations} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n\r\n                            {tvSimilars ? (\r\n                                <Container classname='full-container'>\r\n                                    <span className='sub-title'>Séries Similares</span>\r\n                                    <SerieList list={tvSimilars} />\r\n                                </Container>\r\n                            ) : (null)}\r\n\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport variables from '../var';\r\n\r\nimport MovieList from '../components/MovieList';\r\nimport Container from '../components/Container';\r\nimport SerieList from '../components/SerieList';\r\n\r\nexport default function Home(){\r\n    useEffect(() => {\r\n        getPopularMovieList();\r\n        getNowPlayingMovieList();\r\n        getTopRatedMovieList();\r\n\r\n        getPopularTvList();\r\n        getNowPlayingTvList();\r\n        getTopRatedTvList()\r\n    }, []);\r\n\r\n    //Movies State\r\n    const [ popularMovieList, setPopularMovieList ] = useState({});\r\n    const [ nowPlayingMovieList, setNowPlayingMovieList ] = useState({});\r\n    const [ topRatedMovieList, setTopRatedMovieList ] = useState({});\r\n\r\n\r\n    //Serie State\r\n    const [ popularTvList, setPopularTvList ] = useState({});\r\n    const [ nowPlayingTvList, setNowPlayingTvList ] = useState({});\r\n    const [ topRatedTvList, setTopRatedTvList ] = useState({});\r\n\r\n    //Get Movie Details\r\n    const getPopularMovieList = async () => {\r\n        const res = await fetch(`${ variables.api }trending/movie/week?api_key=${ variables.key }&language=pt-BR`),\r\n            list = await res.json();\r\n        setPopularMovieList(list);\r\n    }\r\n\r\n    const getNowPlayingMovieList = async () => {\r\n        const res = await fetch(`${ variables.api }movie/now_playing?api_key=${ variables.key }&language=pt-BR`),\r\n            list = await res.json();\r\n        setNowPlayingMovieList(list);\r\n    }\r\n\r\n    const getTopRatedMovieList = async () => {\r\n        const res = await fetch(`${ variables.api }movie/top_rated?api_key=${ variables.key }&language=pt-BR`),\r\n            list = await res.json();\r\n        setTopRatedMovieList(list);\r\n    }\r\n\r\n    //Get Series Details\r\n    const getPopularTvList = async () => {\r\n        const res = await fetch(`${ variables.api }trending/tv/week?api_key=${ variables.key }&language=pt-BR`),\r\n            list = await res.json();\r\n        setPopularTvList(list);\r\n    }\r\n    \r\n    const getNowPlayingTvList = async () => {\r\n        const res = await fetch(`${ variables.api }tv/popular?api_key=${ variables.key }&language=pt-BR`),\r\n            list = await res.json();\r\n        setNowPlayingTvList(list);\r\n    }\r\n    \r\n    const getTopRatedTvList = async () => {\r\n        const res = await fetch(`${ variables.api }tv/top_rated?api_key=${ variables.key }&language=pt-BR`),\r\n            list = await res.json();\r\n        setTopRatedTvList(list);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <section style={{ marginBottom: '150px' }}>\r\n                <Container className='full-container'>\r\n                    <MovieList \r\n                        list={ popularMovieList } \r\n                        title='Filmes Populares'>\r\n                    </MovieList>\r\n                </Container>\r\n\r\n                <Container className='full-container'>\r\n                    <MovieList \r\n                        list={ nowPlayingMovieList } \r\n                        title='Filmes recentes'>\r\n                    </MovieList>\r\n                </Container>\r\n\r\n                <Container className='full-container'>\r\n                    <MovieList \r\n                        list={ topRatedMovieList } \r\n                        title='Filmes mais votados'>\r\n                    </MovieList>\r\n                </Container>\r\n\r\n                <Container className='full-container'>\r\n                    <SerieList \r\n                        list={ popularTvList } \r\n                        title='Séries mais assistidas'>\r\n                    </SerieList>\r\n                </Container>\r\n\r\n                <Container className='full-container'>\r\n                    <SerieList \r\n                        list={ nowPlayingTvList } \r\n                        title='Séries recentes'>\r\n                    </SerieList>\r\n                </Container>\r\n\r\n                <Container className='full-container'>\r\n                    <SerieList \r\n                        list={ topRatedTvList } \r\n                        title='Séries mais votadas'>\r\n                    </SerieList>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function About(){\r\n    return(\r\n        <>\r\n            <section className='about-container'>\r\n                <div className='about'>\r\n                    <h1>Sobre o 'OQV?'</h1>\r\n                    <p>É uma aplicação para listar filmes e sériados que utiliza a API e informações do <a href='https://www.themoviedb.org/'>'The Movie Data Base'</a> e foi construída com React JS, por <a href='http://joaocarlosalves.com'>João Carlos Alves</a></p>\r\n                    \r\n                    <div className='center-text'>   \r\n                        <a href='https://www.themoviedb.org/'>\r\n                            <img \r\n                                src='https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg' \r\n                                alt='The Movie Database (TMDb)' \r\n                                style={{ width: '250px', marginTop: '30px' }}\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport variables from '../var';\r\n\r\nimport Container from '../components/Container';\r\nimport MovieList from '../components/MovieList';\r\n\r\nexport default function Search() {\r\n    let { search } = useParams();\r\n\r\n    const fullContainer = {\r\n        float: 'left', \r\n        marginTop: '30px'\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSearch();\r\n    }); \r\n\r\n    const [ searchResult, setSearchResult ] = useState({}); \r\n\r\n    const getSearch = async () => {\r\n        const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${ variables.key }&language=en-US&query=${ search }&page=1&include_adult=false`);\r\n\r\n        const result = await res.json();\r\n\r\n        setSearchResult(result);\r\n    }\r\n\r\n    return(\r\n        <>\r\n\r\n            <Container style={ fullContainer }>\r\n                <h6 className='section-title'>Results for: '{ search }'</h6>\r\n                <MovieList list={ searchResult }></MovieList>\r\n            </Container>\r\n            { /*searchResult.results && searchResult.results.map(result => (\r\n               <div key={result.id}>\r\n                    {result.original_title}\r\n               </div>\r\n            )) */}\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport './style.css';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Details from './pages/Details';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Search from './pages/Search';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Header />\r\n\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <Home />\r\n        </Route>\r\n\r\n        <Route path='/about' >\r\n          <About />\r\n        </Route>\r\n\r\n        <Route path='/search/:search' >\r\n          <Search />\r\n        </Route>\r\n\r\n        <Route path='/detail/:what/:id' >\r\n          <Details />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n    <Footer />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}